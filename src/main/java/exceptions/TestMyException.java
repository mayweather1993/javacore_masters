package exceptions;

public class TestMyException {
    public static void f() throws MyException {
        System.out.println("Throwing exception from method f()");
        //возбуждаем исключение MyException
        throw new MyException();
    }

    public static void g() throws MyException{
        System.out.println("Throwing exception from method g()");
        //возбуждаем исключение MyException
        throw new MyException("exception in method g()");
    }

    public static void main(String[] args) {
		/*Основные правила обработки исключений
		 * Используйте исключения для того, чтобы:
		 * 1) обработать ошибку на текущем уровне(избегайте перехватывать исключения, если вы не знаете, как с ними поступить);
		 * 2) исправить проблему и снова вызвать метод, возбудивший исключение;
		 * 3) предпринять все необходимые действия и продолжить выполнение без повторного вызова метода;
		 * 4) попытаться найти альтернативный результат вместо того, который должен был бы произвести метод;
		 * 5) сделать все возможное в текущем контексте и заново возбудить это же исключение, перенаправив его на более высокий уровень;
		 * 6) сделать все возможное в текущем контексте и заново возбудить новое исключение, перенаправив его на более высокий уровень;
		 * 7) завершить работу программы;
		 * 8) упростить программу (если используемая вами схема обработки исключений делает все только сложнее, значит, она никуда не годится);
		 * 9) добавить вашей библиотеке и программе безопасности (сначала это поможет в отладке программы, а в дальнейшем окупится ее надежностью).
		 * */
        try{
            f();
        } catch(MyException e) {
            e.printStackTrace();
        }
        try{
            g();
        } catch(MyException e) {
            e.printStackTrace();
        }
    }

}

